---
# code: language=ansible

- name: "Ensure that group exists: {{ username }}"
  ansible.builtin.group:
    name: "{{ username }}"
    state: present

- name: "Create user {{ username }}"
  ansible.builtin.user:
    name: "{{ username }}"
    password: "{{ lookup('ansible.builtin.env', 'KODI_PASSWORD') | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}"
    update_password: on_create
    groups: "{{ username }},wheel,audio,video,input,storage"
    append: true
    shell: /bin/bash
    create_home: true
    state: present

- name: Install sudo
  community.general.pacman:
    name: sudo
    state: present
    update_cache: true

- name: Configure sudo for passwordless access
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%wheel ALL=\(ALL\) NOPASSWD: ALL'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Disable root login via console
  ansible.builtin.user:
    user: root
    password_lock: true

- name: Disable root login via SSH
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin no'
  notify: Restart sshd

- name: Ensure .ssh directory exists for user
  ansible.builtin.file:
    path: "/home/{{ username }}/.ssh"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0700'

- name: Add SSH public key to authorized_keys
  ansible.posix.authorized_key:
    user: "{{ username }}"
    state: present
    key: "{{ ssh_public_key }}"

- name: "Enable console autologin for user {{ username }}"
  ansible.builtin.lineinfile:
    path: /etc/systemd/system/getty@tty1.service.d/autologin.conf
    create: true
    owner: root
    group: root
    mode: '0644'
    line: |
      [Service]
      ExecStart=
      ExecStart=-/usr/bin/agetty --autologin {{ username }} --noclear %I $TERM
  notify: Reload systemd
